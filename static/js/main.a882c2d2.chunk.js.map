{"version":3,"sources":["ravengif.gif","triquetra.svg","tarot2.svg","swordmine2.svg","cupmine2.svg","wandsmine2.svg","pentaclemine2.svg","ravenlines2w.svg","Hero.js","ReadingChoiceCircles.js","TarotCard.js","CardTable.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hero","onClick","handleClick","className","ReadingChoiceCircles","props","style","backgroundColor","color","handleChoiceClick","src","option","img","Tri","Single","alt","title","TarotCard","label","cardData","Name","suit","Suit","Cup","Sword","Wand","Pentacles","Ravens","number","Value","def","UprightDef","split","map","val","CardTable","state","readChoice","loading","fetch","this","then","res","json","data","setState","catch","console","log","React","Component","Main","view","id","App","toggleView","bind","logogif","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a882c2d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ravengif.3b7c4e9a.gif\";","module.exports = __webpack_public_path__ + \"static/media/triquetra.f17d6d8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/tarot2.14ed9879.svg\";","module.exports = __webpack_public_path__ + \"static/media/swordmine2.a16e0a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/cupmine2.14b52b7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wandsmine2.a626c1bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/pentaclemine2.71f69670.svg\";","module.exports = __webpack_public_path__ + \"static/media/ravenlines2w.07e47b8a.svg\";","import React from \"react\";\r\nimport \"./hero.css\";\r\n\r\nconst Hero = ({ handleClick }) => {\r\n  const onClick = handleClick;\r\n\r\n  return (\r\n    <div className=\"HeroContainer\">\r\n      <p>Hail & Well Met!</p>\r\n      <div className=\"HeroButton\">\r\n        <button onClick={onClick}>Onwards</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport Tri from \"./triquetra.svg\";\r\nimport Single from \"./tarot2.svg\";\r\nimport \"./Main.css\";\r\nconst ReadingChoiceCircles = (props) => {\r\n  function imageChooser(option) {\r\n    if (option === \"Tri\") {\r\n      return Tri;\r\n    } else if (option === \"Single\") {\r\n      return Single;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ReadingChoiceHolder\">\r\n      <div\r\n        className=\"ReadingChoiceCircle\"\r\n        style={{ backgroundColor: props.color }}\r\n        onClick={props.handleChoiceClick}\r\n      >\r\n        <img src={imageChooser(props.img)} alt={props.alt} />\r\n      </div>\r\n      <h3>{props.title}</h3>\r\n    </div>\r\n  );\r\n};\r\nexport default ReadingChoiceCircles;\r\n","import React from \"react\";\r\nimport \"./TarotCard.css\";\r\nimport Sword from \"./swordmine2.svg\";\r\nimport Cup from \"./cupmine2.svg\";\r\nimport Wand from \"./wandsmine2.svg\";\r\nimport Pentacles from \"./pentaclemine2.svg\";\r\nimport Ravens from \"./ravenlines2w.svg\";\r\n\r\nconst TarotCard = (props) => {\r\n  function imageChooser(suit) {\r\n    if (suit === \"Cups\") {\r\n      return Cup;\r\n    } else if (suit === \"Swords\") {\r\n      return Sword;\r\n    } else if (suit === \"Wands\") {\r\n      return Wand;\r\n    } else if (suit === \"Pentacles\") {\r\n      return Pentacles;\r\n    } else {\r\n      return Ravens;\r\n    }\r\n  }\r\n  function getRomanNumerals(number) {\r\n    if (number === \"1\") {\r\n      return \"I\";\r\n    } else if (number === \"2\") {\r\n      return \"II\";\r\n    } else if (number === \"3\") {\r\n      return \"III\";\r\n    } else if (number === \"4\") {\r\n      return \"IV\";\r\n    } else if (number === \"5\") {\r\n      return \"V\";\r\n    } else if (number === \"6\") {\r\n      return \"VI\";\r\n    } else if (number === \"7\") {\r\n      return \"VII\";\r\n    } else if (number === \"8\") {\r\n      return \"VIII\";\r\n    } else if (number === \"9\") {\r\n      return \"IX\";\r\n    } else if (number === \"10\") {\r\n      return \"X\";\r\n    }\r\n  }\r\n  function definitionFormatter(def) {\r\n    return def.split(\",\");\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className=\"tarotHeader\">{props.label}</h2>\r\n      <div className=\"TarotCard\">\r\n        <div className=\"dataHolder\">\r\n          <div className=\"inner\">\r\n            <div className=\"front\">\r\n              <div className=\"tarotName\">{props.cardData.Name}</div>\r\n              <div className=\"imageHolder\">\r\n                <img\r\n                  className=\"tarotImage\"\r\n                  src={imageChooser(props.cardData.Suit)}\r\n                  alt={props.cardData.Suit}\r\n                />\r\n              </div>\r\n              <div className=\"tarotValue\">\r\n                {getRomanNumerals(props.cardData.Value)}\r\n              </div>\r\n            </div>\r\n            <div className=\"back\">\r\n              <h3>Reading:</h3>\r\n              <div className=\"uprightDefinitionHolder\">\r\n                <div className=\"uprightDefinition\">\r\n                  {definitionFormatter(props.cardData.UprightDef).map((val) => (\r\n                    <li>{val}</li>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TarotCard;\r\n","import React from \"react\";\r\nimport TarotCard from \"./TarotCard.js\";\r\nimport \"./cardtable.css\";\r\nclass CardTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      readChoice: props.readChoice,\r\n      cardData: [],\r\n      loading: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"/api/v1/cardsShuffled/\" + this.state.readChoice)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ cardData: data, loading: false });\r\n      })\r\n      .catch(console.log);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading ? null : (\r\n          <div>\r\n            {this.state.readChoice === 3 && (\r\n              <div className=\"threeReader\">\r\n                <TarotCard cardData={this.state.cardData[0]} label=\"PAST\" />\r\n                <TarotCard label=\"PRESENT\" cardData={this.state.cardData[1]} />\r\n                <TarotCard cardData={this.state.cardData[2]} label=\"FUTURE\" />\r\n              </div>\r\n            )}\r\n            {this.state.readChoice === 1 && (\r\n              <div className=\"oneReader\">\r\n                <TarotCard cardData={this.state.cardData[0]} label=\"TODAY\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardTable;\r\n","import React from \"react\";\r\nimport ReadingChoiceCircle from \"./ReadingChoiceCircles\";\r\nimport CardTable from \"./CardTable.js\";\r\nimport \"./Main.css\";\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      view: \"choiceScreen\",\r\n      readChoice: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MainContainer\">\r\n        {this.state.view === \"choiceScreen\" && (\r\n          <div className=\"ReadingChoicePrompt\">\r\n            <h1>Choose a Reading:</h1>\r\n            <ReadingChoiceCircle\r\n              handleChoiceClick={() => {\r\n                this.setState({\r\n                  readChoice: 3,\r\n                  view: \"readingScreen\",\r\n                });\r\n              }}\r\n              title=\"THREE CARD\"\r\n              id=\"3\"\r\n              img=\"Tri\"\r\n              alt=\"Past, Present, Future\"\r\n              color=\"#3D9BFF\"\r\n            />\r\n            <ReadingChoiceCircle\r\n              handleChoiceClick={() => {\r\n                this.setState({\r\n                  readChoice: 1,\r\n                  view: \"readingScreen\",\r\n                });\r\n              }}\r\n              id=\"1\"\r\n              title=\"SINGLE\"\r\n              img=\"Single\"\r\n              alt=\"Daily Outlook\"\r\n              color=\"#FF9900\"\r\n            />\r\n          </div>\r\n        )}\r\n        {this.state.view === \"readingScreen\" && (\r\n          <CardTable readChoice={this.state.readChoice} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport logogif from \"./ravengif.gif\";\nimport Hero from \"./Hero.js\";\nimport \"./App.css\";\nimport Main from \"./Main.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: \"welcomeScreen\",\n    };\n    this.toggleView = this.toggleView.bind(this);\n  }\n\n  toggleView() {\n    this.setState({\n      view: \"started\",\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"App-logo\">\n            <img src={logogif} className=\"App-logo\" alt=\"logo\" />\n          </div>\n\n          <p\n            onClick={() => {\n              this.setState({\n                view: \"welcomeScreen\",\n              });\n            }}\n          >\n            <div className=\"muninHeader\"> MUNIN</div>\n          </p>\n        </header>\n        {this.state.view === \"welcomeScreen\" && (\n          <Hero handleClick={this.toggleView} />\n        )}\n        {this.state.view === \"started\" && <Main />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}